@using QLVB.DTO
@{
	ViewBag.Title = "Index";
	int intloai = ViewBag.intloai;
}
@section header{
	<i class="glyphicon glyphicon-info-sign">&nbsp;</i>Nhật ký sử dụng
}

@Html.Hidden("idloai", intloai)

@(Html.Kendo().Grid<QLVB.DTO.Log.LogViewModel>()
		.Name("grid")
		.Columns(columns =>
		{
			columns.Bound(c => c.time_stamp).Format("{0:dd/MM/yyyy HH:mm:ss}").Title("Thời gian truy cập").Width(100);
			columns.Bound(o => o.username).Title("Họ và tên").Width(150);
			columns.Bound(o => o.message).Title("Nhật ký").Width("25%").Sortable(false).Groupable(false);
			columns.Bound(o => o.client).Title("Client").Width("20%");
			columns.Bound(o => o.level).Title("Level").Width(60);
			columns.Bound(o => o.host).Title("Server").Width(120);
		})
		.HtmlAttributes(new { style = "height:100%;white-space: normal;" })
		.ColumnMenu()
        //.Filterable(f => f
        //        .Messages(ms => ms.Filter(KendoGridDisplay.Filter).Clear(KendoGridDisplay.Clear)
        //            .And(KendoGridDisplay.And).Or(KendoGridDisplay.Or)
        //        )
        //    .Extra(false)
        //        .Operators(operators => operators
        //            .ForString(str => str.Clear()
        //                .StartsWith(KendoGridDisplay.StartsWith)
        //                .IsEqualTo(KendoGridDisplay.IsEqualTo)
        //                .IsNotEqualTo(KendoGridDisplay.IsNotEqualTo)
        //                .Contains(KendoGridDisplay.Contains)
        //            )
        //            .ForDate(dte => dte.Clear()
        //                .IsEqualTo(KendoGridDisplay.IsEqualTo)
        //                .IsNotEqualTo(KendoGridDisplay.IsNotEqualTo)
        //                .IsGreaterThan(KendoGridDisplay.IsGreaterThan)
        //                .IsLessThan(KendoGridDisplay.IsLessThan)
        //            )
        //        )
        //)
        .Filterable()
		.Resizable(resize => resize.Columns(true))
		.Scrollable()
		.Sortable()
		.Selectable()
		.Pageable(pageable => pageable
			.Refresh(true)
			//.PageSizes(true)
			.ButtonCount(5)
			.Messages(ms => ms.Display(KendoGridDisplay.PageDisplay).Empty(KendoGridDisplay.PageEmpty)
				.First(KendoGridDisplay.PageFirst).Previous(KendoGridDisplay.PagePrevious)
				.Next(KendoGridDisplay.PageNext).Last(KendoGridDisplay.PageLast))
			)
		.DataSource(dataSource => dataSource
			.Ajax()
			.PageSize(QLVB.Common.Utilities.AppSettings.DisplayItemsPerPage)
			.Read(read => read.Action("Log_Read", "Log",
					 new
					{
						intloai = intloai
					})
				)
			)

	   .ToolBar(toolbar =>
		{
			toolbar.Template(@<text>
				<div class="toolbar">
					<label class="category-label" for="category">Danh mục Nhật ký:</label>
					@(Html.Kendo().DropDownList()
								.Name("categories")
								.DataTextField("Text")
								.DataValueField("Value")
								.BindTo(new List<SelectListItem>() {
									new SelectListItem() {
										Text = "Nhật ký hoạt động",
										Value = "1"
									},
									new SelectListItem() {
										Text = "Nhật ký Lỗi",
										Value = "2"
									}
								})
								.Value("1")
								.Events(e => e.Change("onChangeLog"))
					)
					<a class="btn btn-sm btn-primary btn-flat button-box k-grid-excel" href="#">
						<i class="glyphicon glyphicon-print"></i>&nbsp;In&nbsp;
					</a>
				</div>
			</text>)
			;
		})
		.Excel(excel => excel
			.FileName("ExportNhatky.xlsx")
			.Filterable(true)
			.AllPages(true)
			.ProxyURL(Url.Action("Excel_Export_Save", "Log"))
		)
)

<script type="text/javascript">
	$(window).resize(function () {
		SetGridHeight();
	});
	$(document).ready(function () {
		SetGridHeight();
	})
	function onChangeLog(e) {
		var value = this.value(),
			grid = $("#grid").data("kendoGrid");

		if (value) {
			var url = '@Url.Action("Log_Read","Log")';
			url = url + '?intloai=' + value;
			grid.dataSource.transport.options.read.url = url;
			grid.dataSource.read()
		} else {

		}
	}
</script>
