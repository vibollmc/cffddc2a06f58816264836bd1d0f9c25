@model QLVB.DTO.Tinhhinhxuly.ListTonghopVbDiViewModel

@section header{
    <i class="glyphicon glyphicon-tasks">&nbsp;</i>@Model.LoaiVanBan
}

<div class="box ">
    <header>
        <nav class="box-toolbar">
            <button id="PrintListVBbtn" type="button" class="btn btn-sm btn-primary btn-flat button-box">
                <i class="glyphicon glyphicon-print"></i>&nbsp;In&nbsp;
            </button>
            <button id="Backbtn" type="button" class="btn btn-sm btn-primary btn-flat " data-original-title="" title=""><i class="glyphicon glyphicon-arrow-left"></i>&nbsp;Quay lại</button>
        </nav>
    </header>
</div>
@(Html.Kendo().Grid<QLVB.DTO.Vanbandi.ListVanbandiViewModel>()
    .Name("grid").AutoBind(false)
    .Columns(columns =>
    {
        columns.Bound(c => c.intid).Hidden();
        columns.Bound(o => o.IsAttach).Title(" ")
            .ClientTemplate(
                "#if (IsAttach) { #" +
                "<img onclick='ViewDetailVBDi(" + "#= intid #" + ")' alt='#= intid #' src='" + Url.Content("~/Content/Images/noidung_attach.gif") + "' />" +
                "# } else { #" +
                "<img onclick='ViewDetailVBDi(" + "#= intid #" + ")' alt='#= intid #' src='" + Url.Content("~/Content/Images/noidung.gif") + "' />" +
                "# } #"
            )
            .Width(28);
        columns.Bound(o => o.dtengayky).Format("{0:dd/MM/yyyy}").Title("Ngày ký").Width(90);
        columns.Bound(o => o.intso).Title("Số")
            .ClientTemplate(
                "#if (intso>0) { #" +
                "#=intso##=strsophu#"  +
                "# } #"
            )
            .Width(60);
        columns.Bound(o => o.strkyhieu).Title("Ký hiệu").Width("12%");
        columns.Bound(o => o.strtrichyeu).Title("Trích yếu nội dung").Width("30%").Encoded(false);
        columns.Bound(o => o.strnoinhan).Title("Nơi nhận").Width("20%");
        columns.Bound(o => o.inttrangthai).Hidden();
        columns.Bound(o => o.dtehanxuly).Format("{0:dd/MM/yyyy}").Title("Hạn trả lời").Width(90);
    })
    .HtmlAttributes(new { style = "white-space: normal" })
    .Scrollable()
    //.Sortable()
    .Selectable()
    .Resizable(resize => resize.Columns(true))
    .Pageable(pageable => pageable
        .Refresh(true)
        //.PageSizes(true)
        .ButtonCount(5)
            .Messages(ms => ms.Display(QLVB.DTO.KendoGridDisplay.PageDisplay).Empty(QLVB.DTO.KendoGridDisplay.PageEmpty)
                    .First(QLVB.DTO.KendoGridDisplay.PageFirst).Previous(QLVB.DTO.KendoGridDisplay.PagePrevious)
                    .Next(QLVB.DTO.KendoGridDisplay.PageNext).Last(QLVB.DTO.KendoGridDisplay.PageLast))
        )
    .DataSource(dataSource => dataSource
        .Ajax()
        .PageSize(QLVB.Common.Utilities.AppSettings.DisplayItemsPerPage)
            .Read(read => read.Action("Vanbandi_Read", "Tinhhinhxuly",
                new
                {
                    loaiXuLyVbDi = Model.LoaiXuly,
                    donvi = Model.Donvi,
                    strngaybd = Model.Ngaybd,
                    strngaykt = Model.Ngaykt,
                    loaingay = Model.LoaiNgay
                })
            )
            .Events(events => events.Error("onError"))
        )
    .Events(events => events.Change("onChange")
                            .DataBound("onDataBound")
    )
)
@Html.Hidden("idvanban")
@Html.Hidden("idhoso")

@Html.Action("_ViewDetailVBDi", "Vanbandi")
<script type="text/javascript">
    $(function() {
        dataSource = $('#grid').data().kendoGrid.dataSource;
        dataSource.query({
            page: '@Model.Page',
            group: dataSource.group(),
            filter: dataSource.filter(),
            sort: dataSource.sort(),
            pageSize: dataSource.pageSize()
        });
    });
	$(window).resize(function () {
		SetGridHeight();
	});
    $(document).ready(function() {
        SetGridHeight();
    });
	function onError(e, status) {
		SetThongbao("Đã có lỗi xảy ra trên Server!");
	}
	function onChange(arg) {
		var selected = $.map(this.select(), function (item) {
			var value = $(item).text();
			var grid = $("#grid").data("kendoGrid");
			var row = grid.select();
			var intid = grid.dataItem(row).intid;
			var inttrangthai = grid.dataItem(row).inttrangthai;
			SetIdVanban(intid);
		});
	}
    function onDataBound(arg) {
        dataView = this.dataSource.view();
        for (var i = 0; i < dataView.length; i++) {
            if (dataView[i].inttrangthai == 0) {
                var uid = dataView[i].uid;
                $("#grid tbody").find("tr[data-uid=" + uid + "]").addClass("chuaduyet");
            }
        }
    }
	
	function SetIdVanban(idvanban) {
		$('#idvanban').val(idvanban);
	}
	function GetIdVanban() {
		var id = $('#idvanban').val();
		return id;
	}

    function ViewDetailVBDi(id) {
        OpenViewDetailVBDi(id);
    }

	$('#Backbtn').click(function () {
		var url = '@Url.Action("Vanbandi", "Tinhhinhxuly", new { isBack = true })';
		$().redirect(url);
	});
	
	$('#PrintListVBbtn').click(function() {
	    var url = '@Url.Action("ExportVanbanDi", "Tinhhinhxuly", new { loaiXuLyVbDi = (int)Model.LoaiXuly, loaingay = (int)Model.LoaiNgay, strngaybd = Model.Ngaybd, strngaykt = Model.Ngaykt, donvi = Model.Donvi})';
	    url = url.replace(/&amp;/g, '&');
	    window.location = url;
	});
</script>