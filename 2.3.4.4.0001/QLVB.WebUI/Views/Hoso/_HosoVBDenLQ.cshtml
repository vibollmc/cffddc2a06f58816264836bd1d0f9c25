@{
    int idhoso = ViewBag.idhoso;
}
<script type="text/javascript">
    function onChange(arg) {
        var selected = $.map(this.select(), function (item) {
            var value = $(item).text();
            var grid = $("#grid").data("kendoGrid");
            var row = grid.select();
            var intid = grid.dataItem(row).intid;
            var inttrangthai = grid.dataItem(row).inttrangthai;
            var currentPage = grid.dataSource.page();

        });
    }
    function onDataBound(arg) {
        dataView = this.dataSource.view();
        for (var i = 0; i < dataView.length; i++) {
            if (dataView[i].inttrangthai == 0) {
                var uid = dataView[i].uid;
                $("#grid tbody").find("tr[data-uid=" + uid + "]").addClass("chuaduyet");
            }
            else {
                var uid = dataView[i].uid;
                var strClass = SetColorVanban(dataView[i].inttinhtrangxuly, dataView[i].isykien)
                $("#grid tbody").find("tr[data-uid=" + uid + "]").addClass(strClass);
            }
        }
    }
    function SetColorVanban(inttinhtrangxuly, isykien) {
        var strClass = "";
        switch (inttinhtrangxuly) {
            case 0: // dang xu ly
                if (isykien == true) {
                    strClass = "coykien";
                } else {
                    strClass = "dangxuly";
                }
                break;
            case 1: // da hoan thanh
                strClass = "daxuly";
                break;
            default:  // null
                strClass = "daxuly";
                break;
        }
        return strClass;
    }
    function onError(e, status) {
        SetThongbao("Đã có lỗi xảy ra trên Server!");
    }
    function ViewDetailVBDen(id) {
        OpenViewDetailVBDen(id);
    }
</script>

<div class="row" style="padding-left:20px;padding-right:20px;">
    
        @(Html.Kendo().Grid<QLVB.DTO.Vanbanden.ListVanbandenViewModel>()
    .Name("grid")
    .Columns(columns =>
    {
        columns.Bound(c => c.intid).Hidden();
        columns.Bound(o => o.IsAttach).Title(" ")
            .ClientTemplate(
                "#if (IsAttach) { #" +
                    "<img onclick='ViewDetailVBDen(" + "#= intid #" + ")' alt='#= intid #' src='" + Url.Content("~/Content/Images/noidung_attach.gif") + "' />" +
                "# } else { #" +
                    "<img onclick='ViewDetailVBDen(" + "#= intid #" + ")' alt='#= intid #' src='" + Url.Content("~/Content/Images/noidung.gif") + "' />" +
                "# } #"
            )
            .Width(28);
        columns.Bound(o => o.dtengayden).Format("{0:dd/MM/yyyy}").Title("Ngày đến").Width(90);
        columns.Bound(o => o.intsoden).Title("Số đến").Width(60);
        columns.Bound(o => o.strnoiphathanh).Title("Nơi gửi").Width("20%");
        columns.Bound(o => o.strkyhieu).Title("Số, Ký hiệu").Width("12%");
        columns.Bound(o => o.strtrichyeu).Title("Trích yếu nội dung").Width("30%");
        columns.Bound(o => o.strnoinhan).Title("Xử lý chính").Width("14%");
        columns.Bound(o => o.inttrangthai).Hidden();
        columns.Bound(o => o.inttinhtrangxuly).Hidden();
        columns.Bound(o => o.isykien).Hidden();
    })
    .HtmlAttributes(new { style = "white-space: normal;height:470px;" })
    .Scrollable()
    .Sortable()
    .Selectable()
    .Resizable(resize => resize.Columns(true))
    .Pageable(pageable => pageable
        .Refresh(true)
        //.PageSizes(true)
        .ButtonCount(5)
        .Messages(ms => ms.Display(KendoGridDisplay.PageDisplay).Empty(KendoGridDisplay.PageEmpty)
            .First(KendoGridDisplay.PageFirst).Previous(KendoGridDisplay.PagePrevious)
            .Next(KendoGridDisplay.PageNext).Last(KendoGridDisplay.PageLast))
        )
    .DataSource(dataSource => dataSource
        .Ajax()
        .PageSize(QLVB.Common.Utilities.AppSettings.DisplayItemsPerPage)
            .Read(read => read.Action("HosoVBDenLQ_Read", "Vanbanden", new { idhoso = idhoso })
            )
            .Events(events => events.Error("onError"))
        )
    .Events(events => events.Change("onChange")
                    .DataBound("onDataBound"))
        )
    
</div>

