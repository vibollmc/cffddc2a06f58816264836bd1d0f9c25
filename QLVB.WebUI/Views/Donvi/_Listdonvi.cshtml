@model IEnumerable<QLVB.Domain.Entities.Donvitructhuoc>
@using QLVB.Domain.Entities
@using Kendo.Mvc.UI.Fluent

<div class="box ">
    <header>
        <nav class="box-toolbar">
            <button id="AddDonvibtn" type="button" class="btn btn-sm btn-primary btn-flat button-box" data-original-title="" title="Thêm mới"><i class="glyphicon glyphicon-plus"></i>&nbsp;Thêm</button>
            <button id="EditDonvibtn" type="button" class="btn btn-sm btn-primary btn-flat button-box" data-original-title="" title=""><i class="glyphicon glyphicon-pencil"></i>&nbsp;Sửa</button>
            <button id="DeleteDonvibtn" type="button" class="btn btn-sm btn-primary btn-flat button-box" data-original-title="" title=""><i class="glyphicon glyphicon-trash"></i>&nbsp;Xóa</button>

        </nav>
    </header>
</div>

@(
 Html.Kendo().TreeView()
    .Name("treeview")
    .ExpandAll(true)
    .Events(events => events.Select("onSelect_treeview"))
    .HtmlAttributes(new { style = "overflow-y:hidden;" })
    .BindTo((IEnumerable<Donvitructhuoc>)Model, (NavigationBindingFactory<TreeViewItem> mappings) =>
    {
        mappings.For<Donvitructhuoc>(binding => binding.ItemDataBound((item, donvi) =>
            {
                item.Text = donvi.strtendonvi;
                item.Id = donvi.Id.ToString();
            })
            .Children(donvi => donvi.donviChild));       
    })
)
<script type="text/javascript">
    function onSelect_treeview(e) {
        var text = $("#treeview").getKendoTreeView().dataItem(e.node).text;        
        //console.log("Selecting: " + this.text(e.node));
        var iddonvi = $("#treeview").getKendoTreeView().dataItem(e.node).id;       
        SetIdDonvi(iddonvi);
        var url = '@Url.Action("_ListUser", "Donvi", (new { iddonvi = "__id__" }))'.replace('__id__', iddonvi);
        $('#listUser').load(url);
    }
    //function RefreshTreeview() {
    //    var data = $("#treeview").data('kendoTreeView');
    //    data.dataSource.read();
    //    data.dataSource.refresh();
    //}
</script>