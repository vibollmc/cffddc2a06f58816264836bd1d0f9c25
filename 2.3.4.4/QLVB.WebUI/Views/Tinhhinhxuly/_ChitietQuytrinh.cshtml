@model QLVB.DTO.Tinhhinhxuly.ListTonghopVBDenViewModel

@(Html.Kendo().Grid<QLVB.DTO.Vanbanden.ListVanbandenViewModel>()
	.Name("grid").AutoBind(false)
	.Columns(columns =>
	{
		columns.Bound(c => c.intid).Hidden();
		columns.Bound(o => o.IsAttach).Title(" ")
			.ClientTemplate(
				"#if (IsAttach) { #" +
					"<img onclick='ViewDetailVBDen(" + "#= intid #" + ")' alt='#= intid #' src='" + Url.Content("~/Content/Images/noidung_attach.gif") + "' />" +
				"# } else { #" +
					"<img onclick='ViewDetailVBDen(" + "#= intid #" + ")' alt='#= intid #' src='" + Url.Content("~/Content/Images/noidung.gif") + "' />" +
				"# } #"
			)
			.Width(28);
		columns.Bound(o => o.dtengayden).Format("{0:dd/MM/yyyy}").Title("Ngày đến").Width(90);
		columns.Bound(o => o.intsoden).Title("Số đến").Width(60);
		columns.Bound(o => o.strnoiphathanh).Title("Nơi gửi").Width("20%");
		columns.Bound(o => o.strkyhieu).Title("Số, Ký hiệu").Width("12%");
		columns.Bound(o => o.strtrichyeu).Title("Trích yếu nội dung").Width("30%");
		columns.Bound(o => o.strnoinhan).Title("Xử lý chính").Width("14%");
		columns.Bound(o => o.inttrangthai).Hidden();
		columns.Bound(o => o.inttinhtrangxuly).Hidden();
	})
	.HtmlAttributes(new { style = "white-space: normal" })
	.Scrollable()
		//.Sortable()
	.Selectable()
	.Resizable(resize => resize.Columns(true))
	.Pageable(pageable => pageable
		.Refresh(true)
		//.PageSizes(true)
		.ButtonCount(5)
			.Messages(ms => ms.Display(QLVB.DTO.KendoGridDisplay.PageDisplay).Empty(QLVB.DTO.KendoGridDisplay.PageEmpty)
					.First(QLVB.DTO.KendoGridDisplay.PageFirst).Previous(QLVB.DTO.KendoGridDisplay.PagePrevious)
					.Next(QLVB.DTO.KendoGridDisplay.PageNext).Last(QLVB.DTO.KendoGridDisplay.PageLast))
		)
	.DataSource(dataSource => dataSource
		.Ajax()
		.PageSize(QLVB.Common.Utilities.AppSettings.DisplayItemsPerPage)
			.Read(read => read.Action("QuytrinhVBDen_Read", "Tinhhinhxuly",
				new
				{
					intloai = Model.intloai,
					idloaiquytrinh = Model.idloaiquytrinh,
					idquytrinh = Model.idquytrinh,
					strngaybd = Model.strngaybd,
					strngaykt = Model.strngaykt,
					NodeId = Model.NodeId

				})
			)
			.Events(events => events.Error("onError"))
		)
	.Events(events => events.Change("onChange")
							.DataBound("onDataBound")
	)
)

<script type="text/javascript">
	$(function () {
		dataSource = $('#grid').data().kendoGrid.dataSource;
		dataSource.query({
			page: '@Model.intPage',
			group: dataSource.group(),
			filter: dataSource.filter(),
			sort: dataSource.sort(),
			pageSize: dataSource.pageSize()
		})
	})
	$(window).resize(function () {
		SetGridHeight();
	});
	$(document).ready(function () {
		SetGridHeight();
	})
	function onError(e, status) {
		SetThongbao("Đã có lỗi xảy ra trên Server!");
	}
	function onChange(arg) {
		var selected = $.map(this.select(), function (item) {
			var value = $(item).text();
			var grid = $("#grid").data("kendoGrid");
			var row = grid.select();
			var intid = grid.dataItem(row).intid;
			var inttrangthai = grid.dataItem(row).inttrangthai;
			SetIdVanban(intid);
			$.ajax(
			{
				type: "POST",
				url: '@Url.Action("GetIdHosocongviec", "Vanbanden")',
				data: { 'idvanban': intid },
				success: function (data) {
					var idhosocongviec = data;
					SetIdHoso(idhosocongviec);
					DisplayXuly(idhosocongviec);
				}
			});
		});
	}
	function onDataBound(arg) {
		dataView = this.dataSource.view();
		for (var i = 0; i < dataView.length; i++) {
			if (dataView[i].inttrangthai == 0) {
				var uid = dataView[i].uid;
				$("#grid tbody").find("tr[data-uid=" + uid + "]").addClass("chuaduyet");
			}
			else {
				var uid = dataView[i].uid;
				var strClass = SetColorVanban(dataView[i].inttinhtrangxuly)
				$("#grid tbody").find("tr[data-uid=" + uid + "]").addClass(strClass);
			}
		}
	}
	
</script>