@using QLVB.DTO
@{
    
    int idloai = ViewBag.idloai;    
    string strngaykybd = ViewBag.strngaykybd;
    string strngaykykt = ViewBag.strngaykykt;    
    string strloaivb = ViewBag.strloaivb;
    string filename = strloaivb + ".xlsx";
}
@section header{
    <i class="fa fa-file-text">&nbsp;</i>@strloaivb
}

<div class="row">
    <div class="col-sm-12" id="detail-listVBDiDonvi">
        @(Html.Kendo().Grid<QLVB.DTO.Vanbandi.ListVanbandiViewModel>()
    .Name("grid")
            .Columns(columns =>
            {
                //columns.Bound(c => c.intid).Hidden();
                columns.Bound(o => o.IsAttach).Title(" ")
                    .ClientTemplate(
                        "#if (IsAttach) { #" +
                            "<img onclick='ViewDetailVBDi(" + "#= intid #" + ")' alt='#= intid #' src='" + Url.Content("~/Content/Images/noidung_attach.gif") + "' />" +
                        "# } else { #" +
                            "<img onclick='ViewDetailVBDi(" + "#= intid #" + ")' alt='#= intid #' src='" + Url.Content("~/Content/Images/noidung.gif") + "' />" +
                        "# } #"
                    )
                    .Width(28);
                columns.Bound(o => o.dtengayky).Format("{0:dd/MM/yyyy}").Title("Ngày ký").Width(90);
                columns.Bound(o => o.intso).Title("Số")
                    .ClientTemplate(
                        "#=intso##=strsophu#"
                        )
                    .Width(60);
                columns.Bound(o => o.strkyhieu).Title("Ký hiệu").Width(90);
                columns.Bound(o => o.strtrichyeu).Title("Trích yếu nội dung").Width("30%");
                columns.Bound(o => o.strnoinhan).Title("Nơi nhận").Width("20%");
                columns.Bound(o => o.inttrangthai).Hidden();
                columns.Bound(o => o.dtehanxuly).Format("{0:dd/MM/yyyy}").Title("Hạn trả lời").Width(90);
            })
    .HtmlAttributes(new { style = "white-space: normal;height:470px;" })
    .Scrollable()
    .Sortable()
    .Selectable()
    .Resizable(resize => resize.Columns(true))
    .Pageable(pageable => pageable
        .Refresh(true)
        //.PageSizes(true)
        .ButtonCount(5)
        .Messages(ms => ms.Display(KendoGridDisplay.PageDisplay).Empty(KendoGridDisplay.PageEmpty)
            .First(KendoGridDisplay.PageFirst).Previous(KendoGridDisplay.PagePrevious)
            .Next(KendoGridDisplay.PageNext).Last(KendoGridDisplay.PageLast))
        )
    .DataSource(dataSource => dataSource
        .Ajax()
        .PageSize(QLVB.Common.Utilities.AppSettings.DisplayItemsPerPage)
                .Read(read => read.Action("TonghopLoaiVBDT_Read", "Vanbandi", new
            {
                idloai = idloai,
                strngaykybd = strngaykybd,
                strngaykykt = strngaykykt                
            })
            )
            .Events(events => events.Error("onError"))
        )
    .Events(events => events.Change("onChange")
                    .DataBound("onDataBound"))
    .ToolBar(toolbar =>
        {
            toolbar.Template(@<text>
                <div class="toolbar">
                    <button id="Backbtn" type="button" class="btn btn-sm btn-primary btn-flat " data-original-title="" title="">
                        <i class="glyphicon glyphicon-arrow-left"></i>&nbsp;Quay lại
                    </button>
                    <a class="btn btn-sm btn-primary btn-flat button-box k-grid-excel" href="#">
                        <i class="glyphicon glyphicon-print"></i>&nbsp;In&nbsp;
                    </a>
                </div>
            </text>)
            ;
        })
            .Excel(excel => excel
                    .FileName(filename)
                    .Filterable(true)
                    .AllPages(true)
                    .ProxyURL(Url.Action("TonghopVBDonvi_Export", "Vanbandi"))
                )
        )

    </div>
</div>
<script type="text/javascript">
    $(window).resize(function () {
        SetGridHeight();
    });
    $(document).ready(function () {
        SetGridHeight();
    })
    function onChange(arg) {
        var selected = $.map(this.select(), function (item) {
            var value = $(item).text();
            var grid = $("#grid").data("kendoGrid");
            var row = grid.select();
            var intid = grid.dataItem(row).intid;
            var inttrangthai = grid.dataItem(row).inttrangthai;

        });
    }
    function onDataBound(arg) {
        dataView = this.dataSource.view();
        for (var i = 0; i < dataView.length; i++) {
            if (dataView[i].inttrangthai == 0) {
                var uid = dataView[i].uid;
                $("#grid tbody").find("tr[data-uid=" + uid + "]").addClass("chuaduyet");
            }
        }
    }
    function onError(e, status) {
        SetThongbao("Đã có lỗi xảy ra trên Server!");
    }
    function ViewDetailVBDi(id) {
        OpenViewDetailVBDi(id);
    }

    $('#Backbtn').click(function () {
        var url = '@Url.Action("Tonghop", "Vanbandidientu")';
        window.location = url;
    });

</script>
@Html.Action("_ViewDetailVBDi", "Vanbandi")
@Html.Action("_ViewDetailVBDen", "Vanbanden")
@Html.Action("_ViewDetailHoso", "Hoso")



